"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type MemoTest {
    id: ID!
    name: String!
    image_urls: [String!]!
    high_score: Int @field(resolver: "App\\GraphQL\\Resolvers\\MemoTestResolver@highScore")
    created_at: DateTime!
    updated_at: DateTime!
}

type GameSession {
    id: ID!
    memo_test: MemoTest! @belongsTo
    retries: Int!
    number_of_pairs: Int!
    state: GameState!
    score: Int!
    created_at: DateTime!
    updated_at: DateTime!
}

enum GameState {
    Started
    Completed
}

type Query {
    memoTests: [MemoTest!]! @paginate
    memoTest(id: ID! @eq): MemoTest @find
    gameSession(id: ID! @eq): GameSession @find
}

type Mutation {
    createMemoTest(name: String!, image_urls: [String!]!): MemoTest!
        @create
    updateMemoTest(id: ID!, name: String, image_urls: [String!]): MemoTest!
        @update
    deleteMemoTest(id: ID!): MemoTest! @delete

    startGameSession(memoTestId: ID!, numberOfPairs: Int!): GameSession @field(resolver: "App\\GraphQL\\Mutations\\GameSessionMutator@start")
    endGameSession(gameSessionId: ID!): GameSession @field(resolver: "App\\GraphQL\\Mutations\\GameSessionMutator@end")
    updateGameSession(id: ID!, retries: Int): GameSession! @update

    addTry(gameSessionId: ID! @eq): GameSession @field(resolver: "App\\GraphQL\\Mutations\\GameSessionMutator@addTry")
}
